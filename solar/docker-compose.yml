services:
  backend:
    image: ${SOLAR_CADASTRE_BACKEND_IMAGE_NAME}:${SOLAR_CADASTRE_BACKEND_IMAGE_TAG}
    ports:
      - "${SOLAR_CADASTRE_BACKEND_PUBLIC_PORT}:8000"
    environment:
      GEOSERVER_URL: ${SOLAR_CADASTRE_GEOSERVER_SCHEME_HOST}${SOLAR_CADASTRE_GEOSERVER_PATH}
      DB_NAME: ${SOLAR_CADASTRE_DB_NAME}
      DB_USER: ${SOLAR_CADASTRE_DB_USER}
      DB_PASSWORD: ${SOLAR_CADASTRE_DB_PASSWORD}
      DB_HOST: ${SOLAR_CADASTRE_DB_HOST}
      DB_PORT: ${SOLAR_CADASTRE_DB_PORT}
    networks:
      - solar_cadastre_network
  frontend:
    image: ${SOLAR_CADASTRE_FRONTEND_IMAGE_NAME}:${SOLAR_CADASTRE_FRONTEND_IMAGE_TAG}
    ports:
      - "${SOLAR_CADASTRE_FRONTEND_PUBLIC_PORT}:80"
    environment:
      NODE_ENV: production
    networks:
      - solar_cadastre_network
  geoserver:
    image: caddy:2.7
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - GEOSERVER_URL=${SOLAR_CADASTRE_GEOSERVER_SCHEME_HOST}
    networks:
      - solar_cadastre_network
networks:
  solar_cadastre_network:
    driver: bridge
    name: ${NETWORK_NAME_SOLAR_CADASTRE}
volumes:
  caddy_data: {}
  caddy_config: {}
